name: make-release
on: [push, pull_request]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
jobs:
#  lint:
#    name: Lint
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: docker://golangci/golangci-lint:v1.41.1
#        with:
#          args: golangci-lint run

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}

      - run: |
          echo "::debug:: $DOCKERHUB_USERNAME"
          echo "::debug:: $GITHUB_REF"

          if [[ /refs/tags/ = $GITHUB_REF* ]]; then
            tags="
              $DOCKERHUB_USERNAME/mongodb-changes-notifier:latest
              $DOCKERHUB_USERNAME/mongodb-changes-notifier:${GITHUB_REF/refs\/tags\v//}
            "
            echo "::debug:: $tags"
          else
            tags=$DOCKERHUB_USERNAME/mongodb-changes-notifier:latest
            echo "::debug:: $tags"
          fi
          echo ${GITHUB_REF/refs\/tags\v//}

#      - name: Build and push if new release
#        uses: docker/build-push-action@v2
#        if: startsWith(github.ref, 'refs/tags/v')
#        with:
#          context: .
#          push: true
#          tags: |
#            ${{ secrets.DOCKERHUB_USERNAME }}/mongodb-changes-notifier:latest
#            ${{ secrets.DOCKERHUB_USERNAME }}/mongodb-changes-notifier:${GITHUB_REF/refs\/tags\v//}
#
#      - name: Build and push
#        uses: docker/build-push-action@v2
#        if: !startsWith(github.ref, 'refs/tags/v')
#        with:
#          context: .
#          push: false
#          tags: ${{ secrets.DOCKERHUB_USERNAME }}/mongodb-changes-notifier:latest
#  release:
#    name: Release
#    if: startsWith(github.ref, 'refs/tags/v')
#    needs:
#      - lint
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: GoReleaser
#        uses: goreleaser/goreleaser-action@v1
#        with:
#          version: latest
#          args: release --rm-dist
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
